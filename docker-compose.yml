version: "3.8"

services:
  postgres:
    image: postgres:15
    env_file:
      - .env.postgres
    restart: always
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - app_network
    ports:
      - "5432:5432"

  redis:
    image: redis:6
    restart: always
    networks:
      - app_network
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    volumes:
      - media_volume:/app/media
    expose:
      - "8000"
    networks:
      - app_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  celery:
    build:
      context: ./backend
    command: celery -A backend worker --loglevel=info
    entrypoint: ""
    volumes:
      - ./backend:/app
    networks:
      - app_network
    depends_on:
      - backend
      - redis

  frontend:
    build:
      context: ./frontend
    env_file:
      - ./frontend/.env
    expose:
      - "3000"
    networks:
      - app_network
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - media_volume:/app/media
    ports:
      - "80:80"
    networks:
      - app_network
    depends_on:
      - frontend
      - backend

networks:
  app_network:
    driver: bridge

volumes:
  postgres_volume:
  media_volume:
